{"version":3,"sources":["assets/scripts/meteor.js"],"names":["cc","Class","Component","getShipMeta","type","direction","w","h","minRow","minCol","maxRow","maxCol","body","row","col","getDirection","parseInt","Math","random","getLocation","randomRow","randomCol","origin","location","setPosition","x","y","node","spawnMeteor","resources","load","SpriteFrame","err","spriteFrame","sprite","getComponent","Sprite","width","height","setShootDown","isShootDown","color","Color","onLoad","opacity","active","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["cc.Class({\n  extends: cc.Component,\n  // LIFE-CYCLE CALLBACKS:\n\n  getShipMeta(type, direction) {\n    switch (type) {\n      case \"A\": {\n        return {\n          w: 100,\n          h: 100,\n          minRow: 0,\n          minCol: 0,\n          maxRow: 8,\n          maxCol: 8,\n          body: (row, col) => [\n            [row, col],\n            [row + 1, col],\n            [row, col + 1],\n            [row + 1, col + 1],\n          ],\n        }\n      }\n      case \"B\": {\n        switch (direction) {\n          case \"U\":\n          case \"D\":\n            return {\n              w: 150,\n              h: 100,\n              minRow: 0,\n              minCol: 0,\n              maxRow: 8,\n              maxCol: 7,\n              body: (row, col) => [\n                [row, col],\n                [row + 1, col],\n                [row, col + 1],\n                [row + 1, col + 1],\n                [row, col + 2],\n                [row + 1, col + 2],\n              ],\n            }\n          case \"L\":\n          case \"R\":\n            return {\n              w: 100,\n              h: 150,\n              minRow: 0,\n              minCol: 0,\n              maxRow: 7,\n              maxCol: 8,\n              body: (row, col) => [\n                [row, col],\n                [row + 1, col],\n                [row + 2, col],\n                [row, col + 1],\n                [row + 1, col + 1],\n                [row + 2, col + 1],\n              ],\n            }\n        }\n      }\n      case \"C\": {\n        return {\n          w: 100,\n          h: 100,\n          minRow: 0,\n          minCol: 0,\n          maxRow: 8,\n          maxCol: 8,\n          body: (row, col) => [\n            [row, col],\n            [row + 1, col],\n            [row, col + 1],\n            [row + 1, col + 1],\n          ],\n        }\n      }\n      case \"D\":\n      case \"E\": {\n        switch (direction) {\n          case \"U\":\n          case \"D\":\n            return {\n              w: 100,\n              h: 50,\n              minRow: 0,\n              minCol: 0,\n              maxRow: 9,\n              maxCol: 8,\n              body: (row, col) => [\n                [row, col],\n                [row, col + 1],\n              ],\n            }\n          case \"L\":\n          case \"R\":\n            return {\n              w: 50,\n              h: 100,\n              minRow: 0,\n              minCol: 0,\n              maxRow: 8,\n              maxCol: 9,\n              body: (row, col) => [\n                [row + 1, col],\n                [row, col],\n              ],\n            }\n        }\n      }\n    }\n  },\n\n  getDirection() {\n    return [\"U\", \"D\", \"L\", \"R\"][parseInt(Math.random() * 4)]\n  },\n\n  getLocation() {\n    let { minRow, minCol, maxRow, maxCol, body } = this.getShipMeta(\n      this.type,\n      this.direction\n    )\n    let randomRow = parseInt(Math.random() * (maxRow - minRow + 1)) + minRow\n    let randomCol = parseInt(Math.random() * (maxCol - minCol + 1)) + minCol\n\n    this.origin = {\n      row: randomRow,\n      col: randomCol,\n    }\n    this.location = body(randomRow, randomCol)\n  },\n\n  setPosition(x, y) {\n    this.node.x = x\n    this.node.y = y\n  },\n\n  spawnMeteor(type) {\n    this.type = type\n    this.direction = this.getDirection()\n    let { w, h } = this.getShipMeta(this.type, this.direction)\n\n    cc.resources.load(\n      \"images/Meteor_\" + type + \"/\" + type + \"_\" + this.direction,\n      cc.SpriteFrame,\n      (err, spriteFrame) => {\n        let sprite = this.node.getComponent(cc.Sprite)\n        sprite.spriteFrame = spriteFrame\n        this.node.width = w\n        this.node.height = h\n      }\n    )\n  },\n\n  setShootDown() {\n    this.isShootDown = true\n    this.node.color = new cc.Color(255, 0, 0)\n  },\n\n  onLoad() {\n    this.node.opacity = 200\n    this.node.active = false;\n    this.isShootDown = false\n  },\n\n  start() {},\n\n  // update (dt) {},\n})\n"]}